
<div class="section blue lighten-5" id="index-banner">
    <div class="row">
      <div class="col s12 m12">
		<h2 class="header center-on-small-only pink-text darken-4"><span id="record-text">Click to start:</span>
			<a class="btn btn-floating pink darken-4 btn-large pulse" onclick="startConverting();"><i class="material-icons" id="record">mic</i></a> 
		</h2>
    <div id="results"></div>
		<h6 class="light red-text text-darken-4 center-on-small-only">
			Just tell us your symptoms and we will provide you with information to get you feeling good again.
		</h6>
		<form action="/" method="POST">
        <div class="input-field col s6">
          <select class="black-text"  name="gender">
            <option value="male" >Male</option>
            <option value="female" {{#if userFemale}}selected{{/if}}>Female</option>
          </select>
          <label>Gender</label>
        </div>
        <div class="input-field col s6">
          <label for="age">Age</label>
          {{#if userAge}}
            <input required="true" class="black-text" id="age" name="age" type="number" value="{{userAge}}" min="0" max="100" />            
            {{else}}
            <input required="true" class="black-text" id="age" name="age" type="number" value="30" min="0" max="100" />
          {{/if}}

            
        </div>
		  <input type="text" class="black-text" id="spokenSymptoms" name="spokenSymptoms" placeholder="Enter your symptoms here" required="true" />
		  <input id="analyze" type="submit" value="Get Diagnosis" class="btn" />
		</form>
    {{#if noSymp}}
      <h5 class="black-text">
        Sorry, we didn't get that. Please try again.
      </h5>
    {{/if}}
    {{#if probability}}
			<h6 class="black-text">
				Based on your input there is a {{ probability }}% chance that you have {{ diagnosis }}.
			</h6>
		{{/if}}

      </div>

    </div>
</div>

  <!--  Outer row  -->
  <div class="row">
<a name="trending"></a>
    <div class="section col s12 ">
      <div id="download" class="row scrollspy">
          <h2 class="col s12 header">Trending Symtoms:</h2>
        <p class="caption col s12">



<ul class="skill-list">
  {{#each trending}}
    <li class="skill-2">
      <h6>{{this.sName}}</h6>
      <progress class="skill-3" max="100" value="{{this.count}}">
        <strong>{{this.count}}</strong>
      </progress>
    </li>
  {{/each}}
</ul>
        </p>


      </div>

<a name="method"></a>
      
      <div id="setup" class="row scrollspy cyan lighten-5">
        <div class="col s12">
          <h2 class="header pink-text darken-4">Methadology</h2>

      <div class="row">
        <div class="col s12">
          <div class="card">
            <div class="card-content">
              <span class="card-title">Technologies Used</span>
              <p>We use open-source technologies that are free and reliable to develop a great app. The front-end was developed using HTML, CSS, Materialize framework and Handlebars. </p><br>
              <span class="card-title">Front-End</span>
              <p>We render HTML through Express-Handlebars to create a display that will allow users to intuitively input information and receive information back. 
A navigation bar is also used to help users quickly be directed to specific parts of our application.
</p><br>
              <span class="card-title">Routing</span>
              <p>Our Router setup allows our application to create a display, perform an account and login function, and receive information from the user to generate a diagnosis.
</p><br>
              <span class="card-title">Back-End</span>
<p>The database was built in MySQL, managed in WorkBench, and utilized with a custom ORM.
              Back-end was written in Javascript using Node and the server user was Express.</p>
            </div>
            <div class="card-action">
              <div class="chip">HTML</div>
              <div class="chip">CSS</div>
              <div class="chip">Materialize</div>
              <div class="chip">Handlebars</div>
              <div class="chip">MySQL</div>
              <div class="chip">Express</div>
              <div class="chip">Node</div>
              <div class="chip">PassportJS</div>
              <div class="chip">AJAX</div>
            </div>
          </div>
        </div>
      </div>

    </div>
<a name="privacy"></a>
      <h2 class="col s12 header">Privacy</h2>

      <div class="row">
        <div class="col s12">

          <div class="card">
            <div class="card-content">
              <span class="card-title">Security</span>
              <p>Information provided by the user will be stored in a private database. We will protect the information of our users in a secure way. We use PassportJS to manage user sessions safely and securely.</p><br>
              <span class="card-title">Data Security</span>
              <p>The collected information is collected solely for the service of the user. We are the only ones with access to the collected information. 
This information will not be sold or shared with any third parties.</p>
            </div>
          </div>
        </div>
      </div>
   </div>

  </div><!-- row -->

<a name="footer"></a>


<!-- Simple transcriber -->


    <script type="text/javascript">

      var result = document.getElementById('spokenSymptoms');
      //var result = document.getElementById('analyze');

      function startConverting () {
        if('webkitSpeechRecognition' in window){
          var speechRecognizer = new webkitSpeechRecognition();
          //speechRecognizer.continuous = true;
          speechRecognizer.interimResults = true;
          speechRecognizer.lang = 'en-US';
          speechRecognizer.start();

          var finalTranscripts = '';

          speechRecognizer.onresult = function(event){
            var interimTranscripts = '';
            for(var i = event.resultIndex; i < event.results.length; i++){
              var transcript = event.results[i][0].transcript;
              if(event.results[i].isFinal){
                finalTranscripts += transcript;
            document.forms[0].submit();
              }else{
                interimTranscripts += transcript;
              }
            }
            result.value = finalTranscripts + interimTranscripts;
          };
          speechRecognizer.onStop = function(event){
          }
          speechRecognizer.onerror = function (event) {
            console.log(event);
          };
        }else{
          r.innerHTML = 'Your browser is not supported. If google chrome, please upgrade!';
        }
      }

      

    </script>
